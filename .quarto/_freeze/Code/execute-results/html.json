{
  "hash": "d46ca75144d9f1f84845d5830ede5d94",
  "result": {
    "markdown": "---\ntitle: \"Redesign Code\"\n---\n\n\n#### Code of the Redesign\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lattice)\nlibrary(tidyverse)\nlibrary(plotly)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMen <- c(10,23,50,5,12) \nWomen <- c(17,43,30,2,7)\nmat <- cbind(Men, Women) \nmat\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nType <- c(\"Strong feminist\", \"Feminist\",\"Not a feminist\",\"Anti-feminist\", \"No opinion\") \nGender <- c(\"Men\",\"Women\") \ncolnames(mat) <- Gender \nrownames(mat) <- Type \nmat\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nFeminism = dotplot(mat, groups = FALSE, \n                   layout = c(1, 2), aspect = .7, \n        origin = 0,type = c(\"p\",\"h\"),       \n        main = \"Opinion about feminism?\", \n        xlab = \"Feminism based on Gender\",\n        scales = list(x = list(tck = 0, alternating = FALSE)), \n        panel = function(...)          \n        {     panel.fill(rgb(.9,.9,.9)) \n          panel.grid(h = 0,v = -1,col = \"white\",lwd = 2)    \n          panel.dotplot(col = rgb(0,.5,1),cex = 1.1,...) \n        } ) \nFeminism \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMeans <- rowMeans(mat) \nMeans\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(OrderType <- order(-Means))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncbind(mat,Means)[OrderType,]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndotplot(mat[OrderType,],groups = FALSE,\n        layout = c(2,2),aspect = .9,  \n        type = c(\"p\",\"l\"),   \n        main = \"Gender based opinion on Feminism\", \n        xlab = \"Percentage of Opinion\",  \n        scales = list(x = list(tck = 0, alternating =  FALSE)),\n        panel = function(...)\n        {     panel.fill(rgb(.9,.9,.9))   \n          panel.grid(h = 0,v = -1,col = \"white\",lwd = 2) \n          panel.dotplot(col = rgb(0,.6,1),cex = 1.1,...)   } )\n```\n:::\n\n\n#### Creating a Bar chart\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- data.frame( Men = c(10, 23, 50, 5, 12),\nWomen = c(17, 43, 30, 2, 7),\nrow.names = c(\"Strong feminist\", \"Feminist\", \"Not a feminist\", \"Anti-feminist\", \"No opinion\") )\nprint(data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"C:\\\\Users\\\\chpra\\\\OneDrive\\\\Documents\\\\MS\\\\STAT-515\\\\MidProject\\\\hw.R\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata$Opinion <- row.names(data) \nlibrary(tidyr)   \nFeminismdata <- gather(data, Gender, Count, -Opinion) \nlibrary(ggplot2)  \nggplot(Feminismdata, aes(x = Opinion, y = Count, fill = Gender)) + \n  geom_bar(stat = \"identity\", position = \"dodge\") + \n  labs( x = \"Type\",  y = \"Count\",  \n        title = \"Opinion about feminism based on Gender\") +hw\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(Feminismdata, aes(x = Gender, y = Count, fill = Opinion)) +\ngeom_bar(stat = \"identity\", position = \"dodge\") +\nlabs(x=\"Gender\",y=\"Count\",\ntitle=\"Gender based Feminism\", \nfill=\"Types\") + hw\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_ly(Feminismdata, x = ~Gender, y = ~Count, color =  ~Opinion, type = \"bar\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncategories <- c(\"Strong feminist\", \"Feminist\", \"Not a feminist\", \"Anti-feminist\",\n\"No opinion\")\nmen_percentages <- c(10, 23, 50, 5, 12) \nwomen_percentages <- c(17, 43, 30, 2, 7) \ndf <- data.frame(Category = categories,\nMen = men_percentages, Women = women_percentages)\nggplot(df, aes(x = Category)) +\ngeom_bar(aes(y = Men, fill = \"Men\"),\nstat = \"identity\", position = \"dodge\") + \ngeom_bar(aes(y = Women, fill = \"Women\"),\nstat = \"identity\", position = \"dodge\") + \nlabs(x = \"Feminist Beliefs\", y = \"Percentage\",\ntitle = \"Self-Identified Feminist Beliefs by Gender\") +\nscale_fill_manual(values = c(\"Men\" = \"blue\", \"Women\" = \"yellow\")) +\ntheme_minimal() +theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\nguides(fill = guide_legend(title = 'Gender'))\n```\n:::\n",
    "supporting": [
      "Code_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}